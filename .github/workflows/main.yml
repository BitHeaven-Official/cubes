name: Unity Build Project

on: [push]

jobs:
  buildAndTestForLinuxBasedPlatforms:
    name: Build for ${{ matrix.targetPlatform }}
    runs-on: ubuntu-latest
    
    strategy:
      fail-fast: false
      matrix:
        projectPath:
          - gAmE
        unityVersion:
          - 2021.3.2f1
        targetPlatform:
          #- StandaloneOSX
          - StandaloneWindows
          - StandaloneWindows64
          - StandaloneLinux64
          #- iOS
          - Android
          #- WebGL
          
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          lfs: true
          
      - uses: actions/cache@v2
        with:
          path: Library
          key: Library-${{ matrix.targetPlatform }}-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          restore-keys: |
            Library-${{ matrix.targetPlatform }}-
            Library-
            
#       - uses: game-ci/unity-test-runner@v2
#         id: testRunner
#         env:
#           UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
#         with:
#           unityVersion: ${{ matrix.unityVersion }}
#           githubToken: ${{ secrets.GITHUB_TOKEN }}
          
#       - uses: actions/upload-artifact@v2
#         if: always()
#         with:
#           name: Test results (all modes)
#           path: ${{ steps.testRunner.outputs.artifactsPath }}
          
      - uses: game-ci/unity-builder@v2
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          buildName: ${{ matrix.projectPath }}-${{ matrix.targetPlatform }}
          allowDirtyBuild: true
          unityVersion: ${{ matrix.unityVersion }}
          targetPlatform: ${{ matrix.targetPlatform }}
          
      - uses: actions/upload-artifact@v2
        with:
          name: Build
          path: build
